DROP TABLE IF EXISTS USERS, ITEM_REQUESTS, ITEMS, BOOKINGS_STATUS, BOOKINGS;

CREATE TABLE IF NOT EXISTS USERS (
  USER_ID INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
  NAME VARCHAR (55),
  EMAIL VARCHAR (55) NOT NULL
);

CREATE TABLE IF NOT EXISTS ITEM_REQUESTS (
  ITEM_REQUEST_ID INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
  DESCRIPTION VARCHAR (255),
  USER_ID INT NOT NULL REFERENCES USERS (USER_ID) ON DELETE CASCADE,
  CREATED_TIME DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS ITEMS (
  ITEM_ID INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
  NAME VARCHAR (55) NOT NULL,
  DESCRIPTION VARCHAR (255),
  AVAILABLE BOOLEAN,
  USER_ID INT NOT NULL REFERENCES USERS (USER_ID) ON DELETE CASCADE
--  ITEM_REQUEST_ID INT REFERENCES ITEM_REQUESTS (ITEM_REQUEST_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS BOOKINGS_STATUS (
  BOOKING_STATUS_ID INT PRIMARY KEY,
  NAME VARCHAR (55) NOT NULL
);

CREATE TABLE IF NOT EXISTS BOOKINGS (
  BOOKING_ID INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
  BOOKING_START DATE NOT NULL,
  BOOKING_END DATE NOT NULL,
  ITEM_ID INT NOT NULL REFERENCES ITEMS (ITEM_ID) ON DELETE CASCADE,
  USER_ID INT NOT NULL REFERENCES USERS (USER_ID) ON DELETE CASCADE,
  BOOKING_STATUS_ID INT REFERENCES BOOKINGS_STATUS (BOOKING_STATUS_ID) ON DELETE CASCADE
);